name: Test Models

on:
  pull_request:
    branches: ["*"]
  workflow_dispatch:
  push:
    branches:
      - 'dev'
      - 'main'

jobs:
  tests:
    name: Run tests on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Setup EDAMAME Posture
        uses: edamametechnologies/edamame_posture_action@v0
        with:
          edamame_user: ${{ vars.EDAMAME_POSTURE_USER }}
          edamame_domain: ${{ vars.EDAMAME_POSTURE_DOMAIN }}
          edamame_pin: ${{ secrets.EDAMAME_POSTURE_PIN }}
          edamame_id: ${{ github.run_id }}
          checkout: true

      - name: Setup Python
        uses: actions/setup-python@v3.1.4
        with:
          python-version: '3.11.3'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        id: tests 
        run: |
          python3 src/test/main.py
        continue-on-error: true

      - name: Revert last commit if validation fails
        if: steps.tests.outcome == 'failure'
        run: |
          # As we are using a non standard token, we need to set our name and use [skip ci] to avoid infinite loop
          git config user.email "dev@edamame.tech"
          git config user.name "EDAMAME Dev"
          git revert -m 1 HEAD --no-edit --no-commit
          git commit -m "Reverted after threat models validation failed [skip ci]"
          git push

      - name: Upload Report
        uses: actions/upload-artifact@v3
        with:
          name: report-${{ matrix.os }}
          path: report-results.txt

  slack:
    name: Notify Slack
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          name: report-macos-latest
          path: reports
        continue-on-error: true

      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          name: report-windows-latest
          path: reports
        continue-on-error: true

      - name: Download Reports
        uses: actions/download-artifact@v3
        with:
          name: report-ubuntu-latest
          path: reports
        continue-on-error: true

      - name: Aggregate Reports
        id: aggregate
        run: |
          MACOS_REPORT=""
          WINDOWS_REPORT=""
          UBUNTU_REPORT=""

          if [ -f reports/report-macos-latest/report-results.txt ]; then
            MACOS_REPORT=$(cat reports/report-macos-latest/report-results.txt)
          else
            MACOS_REPORT="No report available for macOS."
          fi

          if [ -f reports/report-windows-latest/report-results.txt ]; then
            WINDOWS_REPORT=$(cat reports/report-windows-latest/report-results.txt)
          else
            WINDOWS_REPORT="No report available for Windows."
          fi

          if [ -f reports/report-ubuntu-latest/report-results.txt ]; then
            UBUNTU_REPORT=$(cat reports/report-ubuntu-latest/report-results.txt)
          else
            UBUNTU_REPORT="No report available for Ubuntu."
          fi

          echo "MACOS_REPORT<<EOF" >> $GITHUB_ENV
          echo "$MACOS_REPORT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "WINDOWS_REPORT<<EOF" >> $GITHUB_ENV
          echo "$WINDOWS_REPORT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "UBUNTU_REPORT<<EOF" >> $GITHUB_ENV
          echo "$UBUNTU_REPORT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: 'C07127YECN4'
          slack-message: |
            GitHub threat models tests result on branch `${{ github.ref }}`:

            *macOS:*
            ```
            ${{ env.MACOS_REPORT }}
            ```

            *Windows:*
            ```
            ${{ env.WINDOWS_REPORT }}
            ```

            *Ubuntu:*
            ```
            ${{ env.UBUNTU_REPORT }}
            ```

            View the run details: `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
